generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  status        Boolean?
  stripeLink    String?
  createdWorks  Work[]    @relation("CreatorWorks")
  requestedWorks Work[]   @relation("RequesterWorks")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token         String?
  session_state    String?
  profile          String?
  user             User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Work {
  id              String     @id @default(cuid())
  description     String
  budget          Int
  status          WorkStatus @default(requested)
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt
  deliveryFileUrl String?
  requesterId     String
  creatorId       String
  requester       User       @relation("RequesterWorks", fields: [requesterId], references: [id])
  creator         User       @relation("CreatorWorks", fields: [creatorId], references: [id])
}

enum WorkStatus {
  requested
  rejected
  completed
  delivered
} 